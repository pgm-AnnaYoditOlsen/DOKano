function u(e,t,s,a,r,l,h,d){var o=typeof e=="function"?e.options:e;t&&(o.render=t,o.staticRenderFns=s,o._compiled=!0),a&&(o.functional=!0),l&&(o._scopeId="data-v-"+l);var n;if(h?(n=function(i){i=i||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,!i&&typeof __VUE_SSR_CONTEXT__<"u"&&(i=__VUE_SSR_CONTEXT__),r&&r.call(this,i),i&&i._registeredComponents&&i._registeredComponents.add(h)},o._ssrRegister=n):r&&(n=d?function(){r.call(this,(o.functional?this.parent:this).$root.$options.shadowRoot)}:r),n)if(o.functional){o._injectStyles=n;var p=o.render;o.render=function(g,c){return n.call(c),p(g,c)}}else{var m=o.beforeCreate;o.beforeCreate=m?[].concat(m,n):[n]}return{exports:e,options:o}}const f={mixins:[Fieldtype],data(){return{lat:null,lng:null,markerLat:null,markerLng:null,zoom:null,type:null,style:null,showControls:!1,map:null,marker:null,hasMarker:!1,stylesExpanded:!1,geocoder:null,location:null}},watch:{lat(){this.saveLocation()},lng(){this.saveLocation()},markerLat(){this.saveLocation()},markerLng(){this.saveLocation()},zoom(){this.saveLocation()},type(){this.saveLocation()},style(){this.saveLocation()},showControls(){this.saveLocation()}},computed:{hasGeocoder(){return this.config.geocoder},canReset(){return this.meta.defaultLat&&this.meta.defaultLng},mapHasChanged(){return this.lat!=this.meta.defaultLat||this.lng!=this.meta.defaultLng||this.zoom!=this.config.initial_zoom||this.type!=this.config.initial_type},hasGeolocation(){return navigator.geolocation||!1}},mounted(){this.lat=this.value.lat||this.meta.defaultLat,this.lng=this.value.lng||this.meta.defaultLng,this.markerLat=this.value.markerLat,this.markerLng=this.value.markerLng,this.zoom=this.value.zoom||this.config.initial_zoom||16,this.type=this.value.type||this.config.initial_type||"roadmap",this.style=this.value.style,this.showControls=this.value.showControls,this.map=new google.maps.Map(this.$refs.map,{zoom:Number(this.zoom),center:{lat:Number.parseFloat(this.lat),lng:Number.parseFloat(this.lng)},mapTypeId:this.type,mapTypeControl:this.config.maptypes,mapTypeControlOptions:{mapTypeIds:[google.maps.MapTypeId.ROADMAP,google.maps.MapTypeId.SATELLITE,google.maps.MapTypeId.TERRAIN,google.maps.MapTypeId.HYBRID]},streetViewControl:!1}),this.config.markers&&(this.marker=new google.maps.Marker({clickable:!1,draggable:!0}),this.marker.addListener("dragend",()=>{this.markerLat=this.marker.getPosition().lat(),this.markerLng=this.marker.getPosition().lng()}),this.markerLat&&this.markerLng&&this.addMarker(new google.maps.LatLng(Number.parseFloat(this.markerLat),Number.parseFloat(this.markerLng)))),this.config.geocoder&&(this.geocoder=new google.maps.Geocoder),this.addMapListeners(),this.addUserPositionButton()},methods:{addMapListeners(){this.config.markers&&this.map.addListener("click",e=>{this.addMarker(e.latLng),this.markerLat=e.latLng.lat(),this.markerLng=e.latLng.lng()}),this.map.addListener("center_changed",()=>{this.lat=this.map.getCenter().lat(),this.lng=this.map.getCenter().lng()}),this.map.addListener("zoom_changed",()=>{this.zoom=this.map.getZoom()}),this.map.addListener("maptypeid_changed",()=>{this.type=this.map.getMapTypeId()})},addMarker(e){this.marker.setMap(this.map),this.marker.setPosition(e),this.markerLat=e.lat(),this.markerLng=e.lng(),this.hasMarker=!0},removeMarker(){this.marker.setPosition(null),this.marker.setMap(null),this.markerLat=null,this.markerLng=null,this.hasMarker=!1},resetMap(){this.map.setCenter({lat:Number.parseFloat(this.meta.defaultLat),lng:Number.parseFloat(this.meta.defaultLng)}),this.map.setZoom(Number(this.meta.defaultZoom)||16),this.map.setMapTypeId(Number(this.meta.defaultType)||"roadmap"),this.removeMarker()},saveLocation(){this.update({lat:this.lat,lng:this.lng,markerLat:this.markerLat,markerLng:this.markerLng,zoom:this.zoom,type:this.type,style:this.style,showControls:this.showControls})},findPosition(){this.geocoder.geocode({address:this.location}).then(e=>{if(e.results.length>0){this.$toast.success("Location found");let t=e.results[0].geometry.location;this.map.setCenter(t),this.addMarker(t)}else this.$toast.error("Location not found")}).catch(e=>{this.$toast.error(e.message)})},findUserPosition(){navigator.geolocation&&navigator.geolocation.getCurrentPosition(e=>{const t={lat:e.coords.latitude,lng:e.coords.longitude};this.map.setCenter(t)},()=>{console.debug("Error getting user position")})},addUserPositionButton(){const e=document.createElement("button");e.innerHTML=`
<?xml version="1.0" encoding="iso-8859-1"?>
<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512; display: block;" xml:space="preserve">
<g><g><path d="M256,0c-48.551,0-95.818,13.675-136.693,39.545l16.044,25.35C171.419,42.066,213.139,30,256,30 c42.861,0,84.581,12.066,120.648,34.895l16.044-25.35C351.818,13.675,304.551,0,256,0z"/></g></g>
<g><g><path d="M376.649,447.105C340.581,469.934,298.861,482,256,482c-42.861,0-84.581-12.066-120.648-34.895l-16.044,25.35 C160.182,498.325,207.449,512,256,512c48.551,0,95.818-13.675,136.693-39.545L376.649,447.105z"/></g></g>
<g><g><path d="M472.455,119.307l-25.35,16.044C469.934,171.419,482,213.139,482,256c0,42.861-12.066,84.581-34.895,120.648l25.35,16.044 C498.325,351.818,512,304.551,512,256C512,207.449,498.325,160.182,472.455,119.307z"/></g></g>
<g><g><path d="M64.895,135.352l-25.35-16.045C13.675,160.182,0,207.449,0,256c0,48.551,13.675,95.818,39.545,136.693l25.35-16.044 C42.066,340.581,30,298.861,30,256C30,213.139,42.066,171.419,64.895,135.352z"/></g></g>
<g><g><path d="M256,204c-28.673,0-52,23.327-52,52c0,28.673,23.327,52,52,52c28.673,0,52-23.327,52-52C308,227.327,284.673,204,256,204z M256,278c-12.131,0-22-9.869-22-22s9.869-22,22-22c12.131,0,22,9.869,22,22S268.131,278,256,278z"/></g></g>
</svg>`,e.style.margin="10px",e.style.padding="8px",e.style.width="40px",e.style.boxShadow="rgba(0, 0, 0, 0.3) 0px 1px 4px -1px",e.style.backgroundColor="#FFFFFF",e.addEventListener("mouseover",()=>e.style.backgroundColor="#EFEFEF"),e.addEventListener("mouseout",()=>e.style.backgroundColor="#FFFFFF"),e.addEventListener("click",()=>this.findUserPosition()),this.map.controls[google.maps.ControlPosition.RIGHT_TOP].push(e)}}};var v=function(){var t=this,s=t._self._c;return s("div",[t.hasGeocoder?s("input",{directives:[{name:"model",rawName:"v-model",value:t.location,expression:"location"}],staticClass:"input-text",attrs:{type:"text",placeholder:"Search location"},domProps:{value:t.location},on:{keyup:function(a){return!a.type.indexOf("key")&&t._k(a.keyCode,"enter",13,a.key,"Enter")?null:t.findPosition.apply(null,arguments)},input:function(a){a.target.composing||(t.location=a.target.value)}}}):t._e(),s("div",{ref:"map",staticClass:"w-full h-96"}),s("div",{staticClass:"flex justify-between"},[s("div",[t.hasMarker?s("a",{staticClass:"!text-red-400 text-xs",attrs:{href:"#"},on:{click:function(a){return a.preventDefault(),t.removeMarker.apply(null,arguments)}}},[t._v("[x] Remove marker")]):t.config.markers?s("a",{staticClass:"text-xs",attrs:{href:"#"},on:{click:function(a){a.preventDefault(),t.addMarker(t.map.getCenter())}}},[t._v("[+] Add marker")]):t._e()]),s("div",[t.canReset&&t.mapHasChanged?s("a",{staticClass:"!text-red-400 text-xs",attrs:{href:"#"},on:{click:function(a){return a.preventDefault(),t.resetMap.apply(null,arguments)}}},[t._v("[-] Reset map")]):t._e()])]),s("div",[s("label",[s("input",{directives:[{name:"model",rawName:"v-model",value:t.showControls,expression:"showControls"}],attrs:{type:"checkbox"},domProps:{checked:Array.isArray(t.showControls)?t._i(t.showControls,null)>-1:t.showControls},on:{change:function(a){var r=t.showControls,l=a.target,h=!!l.checked;if(Array.isArray(r)){var d=null,o=t._i(r,d);l.checked?o<0&&(t.showControls=r.concat([d])):o>-1&&(t.showControls=r.slice(0,o).concat(r.slice(o+1)))}else t.showControls=h}}}),t._v(" Map controls")])]),this.meta.pro&&!t.config.hideStyles?s("div",{staticClass:"my-2"},[s("div",{directives:[{name:"show",rawName:"v-show",value:t.stylesExpanded,expression:"stylesExpanded"}]},[t._m(0),s("textarea-input",{model:{value:t.style,callback:function(a){t.style=a},expression:"style"}}),t._m(1),s("button",{staticClass:"btn mt-2",on:{click:function(a){a.preventDefault(),t.stylesExpanded=!1}}},[t._v("Hide styles")])],1),s("button",{directives:[{name:"show",rawName:"v-show",value:!t.stylesExpanded,expression:"!stylesExpanded"}],staticClass:"btn",on:{click:function(a){a.preventDefault(),t.stylesExpanded=!0}}},[t._v("Show styles")])]):t._e()])},k=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"help-block"},[t("p",[e._v("Paste in the styles as JSON.")])])},function(){var e=this,t=e._self._c;return t("div",{staticClass:"text-gray-600 text-xs"},[e._v("Need help? Check out the "),t("a",{attrs:{href:"https://mapstyle.withgoogle.com/",target:"_blank"}},[e._v("style tool")]),e._v(" or "),t("a",{attrs:{href:"https://snazzymaps.com/",target:"_blank"}},[e._v("Snazzy Maps")]),e._v(".")])}],y=u(f,v,k,!1,null,null,null,null);const _=y.exports;Statamic.booting(()=>{Statamic.$components.register("google_map-fieldtype",_)});
